{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home skeleton-ts provides boilerplate for backend project. This project includes: Dependency Injection with InversifyJS Unit test example TypeScript support Hot Reloading Monitoring Per-commit hooks Dockerfile Getting Started git clone git@github.com:darkcl/skeleton-ts.git rm -Rf .git # Start Development make dev","title":"Home"},{"location":"#home","text":"skeleton-ts provides boilerplate for backend project. This project includes: Dependency Injection with InversifyJS Unit test example TypeScript support Hot Reloading Monitoring Per-commit hooks Dockerfile","title":"Home"},{"location":"#getting-started","text":"git clone git@github.com:darkcl/skeleton-ts.git rm -Rf .git # Start Development make dev","title":"Getting Started"},{"location":"about/author/","text":"About Me","title":"Author"},{"location":"about/author/#about-me","text":"","title":"About Me"},{"location":"project-structure/overview/","text":"Overview mermaid.initialize({startOnLoad:true}); Folder Structure app \u251c\u2500\u2500 common \u2502 \u2514\u2500\u2500 { Common Module, e.g. Data Object } \u251c\u2500\u2500 constant \u2502 \u2514\u2500\u2500 { Constant Variable, e.g. DI Types } \u251c\u2500\u2500 controller \u2502 \u2514\u2500\u2500 { Controllers, e.g. TodoController } \u251c\u2500\u2500 locale \u2502 \u2514\u2500\u2500 { Locale Releated Resources } \u251c\u2500\u2500 middleware \u2502 \u2514\u2500\u2500 { Middlewares, e.g. LocaleMiddleware } \u251c\u2500\u2500 repositories \u2502 \u2514\u2500\u2500 { Repositories , e.g. TodoRepository} \u251c\u2500\u2500 server.ts \u251c\u2500\u2500 service \u2502 \u2514\u2500\u2500 { Services, e.g. TodoService } \u2514\u2500\u2500 utils \u2514\u2500\u2500 { Utitlities, e.g. MongoConnection } Relationship between modules Global Scope graph LR id1[server.ts]-->id2[Setup Project Modules] id1-->id3[Setup Global Middleware] id2-->id4[Controller] id2-->id5[Service] id2-->id6[Repository] id2-->id7[Middleware] id3-->id8[CORS] id3-->id9[Helmet] id3-->id10[Logger] Domain Scope graph TB a[User Request]-->id0[Middleware] id0-->id1[Controller] id1-->|Uses|id2[Service] id2-->|Result|id1 id2-->|Uses|id3[Repository] id2-->|Uses|id4[Utility] id3-->|Query|id5[Persistence Data] id4-->|Interact|id6[Thrid-party Data]","title":"Overview"},{"location":"project-structure/overview/#overview","text":"mermaid.initialize({startOnLoad:true});","title":"Overview"},{"location":"project-structure/overview/#folder-structure","text":"app \u251c\u2500\u2500 common \u2502 \u2514\u2500\u2500 { Common Module, e.g. Data Object } \u251c\u2500\u2500 constant \u2502 \u2514\u2500\u2500 { Constant Variable, e.g. DI Types } \u251c\u2500\u2500 controller \u2502 \u2514\u2500\u2500 { Controllers, e.g. TodoController } \u251c\u2500\u2500 locale \u2502 \u2514\u2500\u2500 { Locale Releated Resources } \u251c\u2500\u2500 middleware \u2502 \u2514\u2500\u2500 { Middlewares, e.g. LocaleMiddleware } \u251c\u2500\u2500 repositories \u2502 \u2514\u2500\u2500 { Repositories , e.g. TodoRepository} \u251c\u2500\u2500 server.ts \u251c\u2500\u2500 service \u2502 \u2514\u2500\u2500 { Services, e.g. TodoService } \u2514\u2500\u2500 utils \u2514\u2500\u2500 { Utitlities, e.g. MongoConnection }","title":"Folder Structure"},{"location":"project-structure/overview/#relationship-between-modules","text":"","title":"Relationship between modules"},{"location":"project-structure/overview/#global-scope","text":"graph LR id1[server.ts]-->id2[Setup Project Modules] id1-->id3[Setup Global Middleware] id2-->id4[Controller] id2-->id5[Service] id2-->id6[Repository] id2-->id7[Middleware] id3-->id8[CORS] id3-->id9[Helmet] id3-->id10[Logger]","title":"Global Scope"},{"location":"project-structure/overview/#domain-scope","text":"graph TB a[User Request]-->id0[Middleware] id0-->id1[Controller] id1-->|Uses|id2[Service] id2-->|Result|id1 id2-->|Uses|id3[Repository] id2-->|Uses|id4[Utility] id3-->|Query|id5[Persistence Data] id4-->|Interact|id6[Thrid-party Data]","title":"Domain Scope"},{"location":"workflow/doc/","text":"","title":"Documentation"}]}